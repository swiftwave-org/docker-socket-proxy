global
    log stdout format raw daemon "${LOG_LEVEL}"
    user root
    group root
    pidfile /run/haproxy.pid
    maxconn 4000

    # Turn on stats unix socket
    server-state-file /var/lib/haproxy/server-state

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 10m
    timeout server 10m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

    # Allow seamless reloads
    load-server-state-from-file global

    # Use provided example error pages
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend docker_frontend
    bind :2375

    # http-request deny if !{ path_beg -i /${AUTH_TOKEN} }
    # http-request set-uri %[url,regsub(^/${AUTH_TOKEN},,)] 

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/_ping } METH_GET { env(PING_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/_ping } METH_HEAD { env(PING_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/_ping } METH_POST { env(PING_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/_ping } METH_PUT { env(PING_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/_ping } METH_DELETE { env(PING_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/version } METH_GET { env(VERSION_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/version } METH_HEAD { env(VERSION_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/version } METH_POST { env(VERSION_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/version } METH_PUT { env(VERSION_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/version } METH_DELETE { env(VERSION_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/info } METH_GET { env(INFO_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/info } METH_HEAD { env(INFO_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/info } METH_POST { env(INFO_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/info } METH_PUT { env(INFO_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/info } METH_DELETE { env(INFO_WRITE) -m bool }


    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/events } METH_GET { env(EVENTS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/events } METH_HEAD { env(EVENTS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/events } METH_POST { env(EVENTS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/events } METH_PUT { env(EVENTS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/events } METH_DELETE { env(EVENTS_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/auth } METH_GET { env(AUTH_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/auth } METH_HEAD { env(AUTH_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/auth } METH_POST { env(AUTH_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/auth } METH_PUT { env(AUTH_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/auth } METH_DELETE { env(AUTH_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/secrets } METH_GET { env(SECRETS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/secrets } METH_HEAD { env(SECRETS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/secrets } METH_POST { env(SECRETS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/secrets } METH_PUT { env(SECRETS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/secrets } METH_DELETE { env(SECRETS_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/build } METH_GET { env(BUILD_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/build } METH_HEAD { env(BUILD_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/build } METH_POST { env(BUILD_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/build } METH_PUT { env(BUILD_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/build } METH_DELETE { env(BUILD_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/commit } METH_GET { env(COMMIT_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/commit } METH_HEAD { env(COMMIT_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/commit } METH_POST { env(COMMIT_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/commit } METH_PUT { env(COMMIT_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/commit } METH_DELETE { env(COMMIT_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/configs } METH_GET { env(CONFIGS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/configs } METH_HEAD { env(CONFIGS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/configs } METH_POST { env(CONFIGS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/configs } METH_PUT { env(CONFIGS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/configs } METH_DELETE { env(CONFIGS_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/containers } METH_GET { env(CONTAINERS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/containers } METH_HEAD { env(CONTAINERS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/containers } METH_POST { env(CONTAINERS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/containers } METH_PUT { env(CONTAINERS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/containers } METH_DELETE { env(CONTAINERS_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/distribution } METH_GET { env(DISTRIBUTION_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/distribution } METH_HEAD { env(DISTRIBUTION_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/distribution } METH_POST { env(DISTRIBUTION_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/distribution } METH_PUT { env(DISTRIBUTION_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/distribution } METH_DELETE { env(DISTRIBUTION_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/exec } METH_GET { env(EXEC_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/exec } METH_HEAD { env(EXEC_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/exec } METH_POST { env(EXEC_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/exec } METH_PUT { env(EXEC_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/exec } METH_DELETE { env(EXEC_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/grpc } METH_GET { env(GRPC_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/grpc } METH_HEAD { env(GRPC_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/grpc } METH_POST { env(GRPC_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/grpc } METH_PUT { env(GRPC_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/grpc } METH_DELETE { env(GRPC_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/images } METH_GET { env(IMAGES_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/images } METH_HEAD { env(IMAGES_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/images } METH_POST { env(IMAGES_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/images } METH_PUT { env(IMAGES_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/images } METH_DELETE { env(IMAGES_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/networks } METH_GET { env(NETWORKS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/networks } METH_HEAD { env(NETWORKS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/networks } METH_POST { env(NETWORKS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/networks } METH_PUT { env(NETWORKS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/networks } METH_DELETE { env(NETWORKS_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/nodes } METH_GET { env(NODES_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/nodes } METH_HEAD { env(NODES_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/nodes } METH_POST { env(NODES_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/nodes } METH_PUT { env(NODES_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/nodes } METH_DELETE { env(NODES_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/plugins } METH_GET { env(PLUGINS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/plugins } METH_HEAD { env(PLUGINS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/plugins } METH_POST { env(PLUGINS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/plugins } METH_PUT { env(PLUGINS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/plugins } METH_DELETE { env(PLUGINS_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/services } METH_GET { env(SERVICES_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/services } METH_HEAD { env(SERVICES_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/services } METH_POST { env(SERVICES_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/services } METH_PUT { env(SERVICES_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/services } METH_DELETE { env(SERVICES_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/session } METH_GET { env(SESSION_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/session } METH_HEAD { env(SESSION_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/session } METH_POST { env(SESSION_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/session } METH_PUT { env(SESSION_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/session } METH_DELETE { env(SESSION_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/swarm } METH_GET { env(SWARM_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/swarm } METH_HEAD { env(SWARM_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/swarm } METH_POST { env(SWARM_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/swarm } METH_PUT { env(SWARM_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/swarm } METH_DELETE { env(SWARM_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/system } METH_GET { env(SYSTEM_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/system } METH_HEAD { env(SYSTEM_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/system } METH_POST { env(SYSTEM_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/system } METH_PUT { env(SYSTEM_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/system } METH_DELETE { env(SYSTEM_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/tasks } METH_GET { env(TASKS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/tasks } METH_HEAD { env(TASKS_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/tasks } METH_POST { env(TASKS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/tasks } METH_PUT { env(TASKS_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/tasks } METH_DELETE { env(TASKS_WRITE) -m bool }

    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/volumes } METH_GET { env(VOLUMES_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/volumes } METH_HEAD { env(VOLUMES_READ) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/volumes } METH_POST { env(VOLUMES_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/volumes } METH_PUT { env(VOLUMES_WRITE) -m bool }
    http-request allow if { path,url_dec -m reg -i ^(/v[\d\.]+)?/volumes } METH_DELETE { env(VOLUMES_WRITE) -m bool }
    # Deny all other requests
    http-request deny
    # move request to backend
    default_backend docker_backend

backend docker_backend
    server dockersocket $DOCKER_SOCKET_PATH
